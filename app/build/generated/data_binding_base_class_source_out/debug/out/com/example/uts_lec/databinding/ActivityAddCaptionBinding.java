// Generated by view binder compiler. Do not edit!
package com.example.uts_lec.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.uts_lec.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddCaptionBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView cancelButton;

  @NonNull
  public final EditText captionText;

  @NonNull
  public final ShapeableImageView capturedImageView;

  @NonNull
  public final View circularBackground;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final ImageView saveButton;

  @NonNull
  public final ImageView sendButton;

  private ActivityAddCaptionBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView cancelButton, @NonNull EditText captionText,
      @NonNull ShapeableImageView capturedImageView, @NonNull View circularBackground,
      @NonNull ProgressBar progressBar, @NonNull ImageView saveButton,
      @NonNull ImageView sendButton) {
    this.rootView = rootView;
    this.cancelButton = cancelButton;
    this.captionText = captionText;
    this.capturedImageView = capturedImageView;
    this.circularBackground = circularBackground;
    this.progressBar = progressBar;
    this.saveButton = saveButton;
    this.sendButton = sendButton;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddCaptionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddCaptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_caption, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddCaptionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancelButton;
      ImageView cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.captionText;
      EditText captionText = ViewBindings.findChildViewById(rootView, id);
      if (captionText == null) {
        break missingId;
      }

      id = R.id.capturedImageView;
      ShapeableImageView capturedImageView = ViewBindings.findChildViewById(rootView, id);
      if (capturedImageView == null) {
        break missingId;
      }

      id = R.id.circularBackground;
      View circularBackground = ViewBindings.findChildViewById(rootView, id);
      if (circularBackground == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.saveButton;
      ImageView saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.sendButton;
      ImageView sendButton = ViewBindings.findChildViewById(rootView, id);
      if (sendButton == null) {
        break missingId;
      }

      return new ActivityAddCaptionBinding((RelativeLayout) rootView, cancelButton, captionText,
          capturedImageView, circularBackground, progressBar, saveButton, sendButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
